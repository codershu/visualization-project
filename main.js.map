{"version":3,"sources":["./src/environments/environment.ts","./src/app/map-chart/map-chart.component.ts","./src/app/map-chart/map-chart.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/circular-chart/circular-chart.component.ts","./src/app/circular-chart/circular-chart.component.html","./src/app/shared/models.ts","./src/app/bar-chart/bar-chart.component.ts","./src/app/bar-chart/bar-chart.component.html","./src/app/app-routing.module.ts","./src/app/description/description.component.ts","./src/app/description/description.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport * as d3 from \"d3\";\nimport states from '../../assets/data/state_name.json';\nimport { HttpClient } from '@angular/common/http';\nimport { DailyData, StateData, MapSingleDayData } from '../shared/models';\n\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.css']\n})\nexport class MapChartComponent implements OnInit {\n\n  myStates: {} = states;\n  loadAllFilePromises: Promise<any>[] = [];\n  currentDate: string = \"\";\n  mapData: any = null;\n  width: number = 860;\n  height: number = 500;\n  myNumber: number = 0;\n  minDate: string = \"2020-03-01\";\n  maxDate: string = \"2021-02-22\";\n  allStatesData: StateData[] = [];\n  currentStateData: MapSingleDayData[] = [];\n  svg: any;\n  lowColor: string = \"#f9f9f9\";\n  highColor: string = \"#B22222\";\n  dynamicalInterval: any;\n  mouseoverState: string = \"None\";\n  mouseoverNumber: number = 0;\n\n  projection = d3.geoAlbersUsa()\n                  .scale(900)\n                  .translate([this.width/2, this.height/2])\n  path = d3.geoPath()\n           .projection(this.projection);\n\n  minVal: number = 0;\n  maxVal: number = 0;\n  ramp = d3.scaleLinear<string>()\n           .domain([this.minVal, this.maxVal])\n          //  .interpolate(d3.interpolatePuRd([\"\", \"\"]))\n           .range([this.lowColor, this.highColor]);\n  tooltip: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    // start point for everything\n    this.loadAllData();\n  }\n\n  loadAllData(){\n    // loop through state_name list to create each file name to read file\n    Object.entries(this.myStates).forEach(([key, value]) => {\n      // console.log(\"check\", key, value)\n      let fileName = key + '.json';\n      let filePath = 'assets/data/history/json/' + fileName;\n      let fullStateName = \"\" + value;\n\n      // add each readFile Promise function into a list\n      this.loadAllFilePromises.push(this.readFile(filePath, key, fullStateName));\n    });\n    \n    // Promise all Promises to move to the next step, ensure we have read all files\n    Promise.all(this.loadAllFilePromises)\n      .then(() => {\n        this.ramp = d3.scaleLinear<string>().domain([this.minVal, this.maxVal / 2]).range([this.lowColor, this.highColor]);\n        this.loadMapData();\n      });\n  }\n\n  // this is a Promise function, Promise will ensure finishing current work before reaching to the next step\n  readFile(filePath: string, stateName: string, fullStateName: string): Promise<any> {\n      return new Promise((resolve, reject) => {\n        this.http.get(filePath, {responseType: 'json'})\n          .subscribe(\n            data => {\n              let currentStateData: StateData = new StateData();\n              // loop through each day's data of a state to combine as a summarized data set\n              Object.entries(data).forEach(([key, value]) => {\n                // console.log(\"check key value\", key, value)\n                let daily: DailyData = Object.assign(new DailyData(), value);\n                // this.minVal = daily.positive < this.minVal ? daily.positive : this.minVal;\n                this.maxVal = daily.positive > this.maxVal ? daily.positive : this.maxVal;\n                currentStateData.daily.push(daily);\n              });\n              currentStateData.state = stateName;\n              currentStateData.fullStateName = fullStateName;\n              this.allStatesData.push(currentStateData);\n              // console.log(\"check json\", currentStateData);\n              \n              resolve(currentStateData);\n            },\n            error => {\n              reject(error);\n              console.log(\"error when read file\", error);\n            }\n          );\n      })\n  }\n\n  // read map json file\n  loadMapData(){\n    d3.json(\"assets/map/us-state.json\")\n      .then(data => {\n          // console.log(\"check map data\", data);\n          this.mapData = data;\n          this.prepareDate();\n      })\n      .catch(error => \n        console.log(\"error when load us.json\", error)\n      );\n  }\n\n   // find the minimum date as the start date\n   prepareDate(){\n    // this.allStatesData.forEach(state => {\n    //   let tempDate = new Date(state.daily[state.daily.length - 1].date);\n    //   let current = new Date(this.minDate);\n    //   if(tempDate < current){\n    //     this.minDate = state.daily[state.daily.length - 1].date;\n    //   }\n    // })\n    this.currentDate = this.minDate;\n    // console.log(\"check min date\", this.minDate)\n    this.prepareData()\n        .then(() => {\n          this.drawMap();\n          this.drawLengend();\n        })\n        .catch(error => console.log(\"error when inital draw map\", error));\n  }\n\n  // reorganize data into a single day dataset with all states, \"recovered\" was not actually used\n  prepareData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.currentStateData = [];\n      this.allStatesData.forEach(state => {\n        let currentPositive = state.daily.find(x => x.date == this.currentDate)?.positive;\n        // console.log(\"check each state\", state.fullStateName, currentPositive)\n        currentPositive = currentPositive == null ? 0 : currentPositive;\n        let currentRecovered = state.daily.find(x => x.date == this.currentDate)?.recovered;\n        currentRecovered = currentRecovered == null ? 0 : currentRecovered;\n        let currentStateData = new MapSingleDayData();\n        currentStateData.state = state.state;\n        currentStateData.positive = currentPositive;\n        currentStateData.recovered = currentRecovered;\n        currentStateData.fullStateName = state.fullStateName;\n        this.currentStateData.push(currentStateData);\n      })\n\n      resolve(this.currentStateData);\n    })\n  }\n\n  // draw the map initially, notice the this.svg is a global variable, for updating data on it in the following step\n  drawMap(){\n    // console.log(\"check current data\", this.currentStateData)\n    let that = this;\n    this.svg = d3.select(\"#graph\")\n                .append(\"svg\")\n                .attr(\"width\", this.width)\n                .attr(\"height\", this.height)\n\n    this.svg.selectAll()\n            .data(this.mapData.features)\n            .enter()\n            .append(\"path\")\n            // fill is the key step to update the color filled in each state\n            // by using ramp function with the current positive number\n            // ramp is a d3 way to define the color of choosed area\n            .attr(\"fill\",function(d: any){\n              // console.log(\"check d\", d);\n              let data = that.currentStateData.find(x => x.fullStateName == d.properties.name);\n              if(data){\n                let value = data.positive - data.recovered;\n                return that.ramp(value);\n              }\n              else\n                return that.lowColor;\n            })\n            .attr(\"stroke\", \"#333\")\n            .attr(\"stroke-width\", 0.5)\n            .attr(\"d\", that.path);\n    \n    this.tooltip = d3.select(\"#graph\")\n            .append(\"div\")\n            .style(\"opacity\", 0)\n            .attr(\"class\", \"tooltip\")\n            .style(\"background-color\", \"white\")\n            .style(\"border\", \"solid\")\n            .style(\"border-width\", \"2px\")\n            .style(\"border-radius\", \"5px\")\n            .style(\"padding\", \"5px\");\n\n    this.addTag();\n\n    // after inital drawing, start adding time to update data\n    this.dynamicalChange();\n  }\n\n  addTag(){\n    let that = this;\n\n    this.svg.selectAll(\"text\")\n            .data(this.mapData.features)\n            .enter()\n            .append(\"svg:text\")\n            .text(function(d: any){\n              let shortName = \"\";\n              Object.entries(that.myStates).forEach(([key, value]) => {\n                if(value == d.properties.name){\n                  shortName = key;\n                }\n              });\n              return shortName;\n            })\n            .attr(\"x\", function(d: any){\n                return that.path.centroid(d)[0];\n            })\n            .attr(\"y\", function(d: any){\n                return that.path.centroid(d)[1];\n            })\n            .attr(\"text-anchor\",\"middle\")\n            .attr('font-size','6pt')\n            .on(\"mouseover\", function(d: any, i: any){\n              clearInterval(that.dynamicalInterval);\n              that.tooltip.style(\"opacity\", 1);\n              d3.select(null)\n                .style(\"stroke\", \"none\")\n                .style(\"opacity\", 0.8);\n              let data = that.currentStateData.find(x => x.fullStateName == i.properties.name);\n              let number = 0;\n              if(data) number = data.positive;\n              that.mouseoverState = i.properties.name;\n              that.mouseoverNumber = number;\n              // that.tooltip\n              //   .html(function(){\n              //     // console.log(\"check d 2\", d)\n              //     return \"State: \" + i.properties.name + \", Number: \" + number;\n              //   }\n              // )  \n            })\n            .on(\"mousemove\", function(d: any, i: any){\n              clearInterval(that.dynamicalInterval);\n              let data = that.currentStateData.find(x => x.fullStateName == i.properties.name);\n              let number = 0;\n              if(data) number = data.positive;\n              that.mouseoverState = i.properties.name;\n              that.mouseoverNumber = number;\n              // that.tooltip\n              //   .html(function(){\n              //     // console.log(\"check d 2\", d)\n              //     return \"State: \" + i.properties.name + \", Number: \" + number;\n              //   }\n              // )  \n            })\n            .on(\"mouseleave\", function(){\n              that.mouseoverState = \"None\";\n              that.mouseoverNumber = 0;\n              that.dynamicalChange();\n              that.tooltip\n                  .style(\"opacity\", 0)\n              d3.select(null)\n                .style(\"stroke\", \"none\")\n                .style(\"opacity\", 0.8)\n            })\n  }\n\n  // use the setInterval function to update the data with certain time period\n  dynamicalChange(){\n    this.dynamicalInterval = setInterval(() => {\n      let current = new Date(this.currentDate);\n      if(current < new Date(this.maxDate)){\n        this.currentDate = new Date(current.setDate(current.getDate() + 1)).toLocaleString('en-CA').slice(0, 10);\n        this.prepareData()\n          .then(() => {\n            this.updateMap();\n          })\n          .catch(error => console.log(\"error when prepare data\", error));\n      }else{\n        clearInterval(this.dynamicalInterval);\n        setTimeout(() => {\n          this.currentDate = this.minDate;\n          this.dynamicalChange();\n        }, 3000);\n\n      }\n    }, 50);\n  }\n\n  // update existing map with new data\n  updateMap(){\n    let that = this;\n\n    this.svg.selectAll(\"path\")\n            .data(this.mapData.features)\n            // .enter()\n            .attr(\"fill\",function(d: any){\n              let data = that.currentStateData.find(x => x.fullStateName == d.properties.name);\n              if(data){\n                // console.log(\"check d\", data.positive, data.recovered);\n                // let value = data.positive - data.recovered;\n                let value = data.positive;\n                return that.ramp(value);\n              }\n              else\n                return that.lowColor;\n            })\n            .on(\"mouseover\", function(d: any, i: any){\n              clearInterval(that.dynamicalInterval);\n              that.tooltip.style(\"opacity\", 1);\n              d3.select(null)\n                .style(\"stroke\", \"none\")\n                .style(\"opacity\", 0.8);\n              let data = that.currentStateData.find(x => x.fullStateName == i.properties.name);\n              let number = 0;\n              if(data) number = data.positive;\n              that.mouseoverState = i.properties.name;\n              that.mouseoverNumber = number;\n              // that.tooltip\n              //   .html(function(){\n              //     // console.log(\"check d 2\", d)\n              //     return \"State: \" + i.properties.name + \", Number: \" + number;\n              //   }\n              // )  \n            })\n            .on(\"mousemove\", function(d: any, i: any){\n              clearInterval(that.dynamicalInterval);\n              let data = that.currentStateData.find(x => x.fullStateName == i.properties.name);\n              let number = 0;\n              if(data) number = data.positive;\n              that.mouseoverState = i.properties.name;\n              that.mouseoverNumber = number;\n              // that.tooltip\n              //   .html(function(){\n              //     // console.log(\"check d 2\", d)\n              //     return \"State: \" + i.properties.name + \", Number: \" + number;\n              //   }\n              // )  \n            })\n            .on(\"mouseleave\", function(){\n              that.dynamicalChange();\n              that.tooltip\n                  .style(\"opacity\", 0)\n              d3.select(null)\n                .style(\"stroke\", \"none\")\n                .style(\"opacity\", 0.8);\n              that.mouseoverState = \"None\";\n              that.mouseoverNumber = 0;\n            })\n            .attr(\"d\", that.path);\n\n    this.addTag();\n  }\n\n  drawLengend(){\n    var w = 140, h = 300;\n\n\t\tvar key = d3.select(\"#graph\")\n\t\t\t.append(\"svg\")\n\t\t\t.attr(\"width\", w)\n\t\t\t.attr(\"height\", h)\n\t\t\t.attr(\"class\", \"legend\");\n\n\t\tvar legend = key.append(\"defs\")\n\t\t\t.append(\"svg:linearGradient\")\n\t\t\t.attr(\"id\", \"gradient\")\n\t\t\t.attr(\"x1\", \"100%\")\n\t\t\t.attr(\"y1\", \"0%\")\n\t\t\t.attr(\"x2\", \"100%\")\n\t\t\t.attr(\"y2\", \"100%\")\n\t\t\t.attr(\"spreadMethod\", \"pad\");\n\n\t\tlegend.append(\"stop\")\n\t\t\t.attr(\"offset\", \"0%\")\n\t\t\t.attr(\"stop-color\", this.highColor)\n\t\t\t.attr(\"stop-opacity\", 1);\n\t\t\t\n\t\tlegend.append(\"stop\")\n\t\t\t.attr(\"offset\", \"100%\")\n\t\t\t.attr(\"stop-color\", this.lowColor)\n\t\t\t.attr(\"stop-opacity\", 1);\n\n\t\tkey.append(\"rect\")\n\t\t\t.attr(\"width\", w - 110)\n\t\t\t.attr(\"height\", h)\n\t\t\t.style(\"fill\", \"url(#gradient)\")\n\t\t\t.attr(\"transform\", \"translate(0,10)\");\n\n\t\tvar y = d3.scaleLinear()\n\t\t\t.range([h, 0])\n\t\t\t.domain([this.minVal, this.maxVal / 2]);\n\n\t\tvar yAxis = d3.axisRight(y);\n\n\t\tkey.append(\"g\")\n\t\t\t.attr(\"class\", \"y axis\")\n\t\t\t.attr(\"transform\", \"translate(31,10)\")\n\t\t\t.call(yAxis)\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"sub-page-title\">\n        <h4 style=\"font-weight: bold;\">US Covid-19 Positive Case Map</h4>\n        <div class=\"self-tooltip\">Current Date: <span style=\"color:darkslategray;font-weight: bold;\">{{currentDate}}</span></div>\n        <div class=\"self-tooltip\">\n            State: <span style=\"color: darkviolet;font-family: Arial, Helvetica, sans-serif;font-weight: 800;font-size: large;\">{{mouseoverState}}</span>, Number: <span style=\"color: red;font-family: Arial, Helvetica, sans-serif;font-weight: 800;font-size: large;\">{{mouseoverNumber}}</span>\n        </div>\n    </div>\n    <div id=\"graph\"></div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'visualization-covid19';\n}\n","<div class=\"toolbar\" role=\"banner\">\n  <img width=\"100\" height=\"40\" alt=\"Uvic Logo\" src=\"assets/img/UVic_logo.jpg\"/>\n\n  <span>CSC 511 Course Project -- Visualization COVID-19</span>\n\n  <div class=\"spacer\"></div>\n\n  <span><a routerLink=\"/home\"><span class=\"nav-sub-title\">Description</span></a></span>\n  <span><a routerLink=\"/map\"><span class=\"nav-sub-title\">Map</span></a></span>\n  <span><a routerLink=\"/bar\"><span class=\"nav-sub-title\">Bar</span></a></span>\n  <span><a routerLink=\"/circular\"><span class=\"nav-sub-title\">Circular</span></a></span>\n</div>\n\n\n<div class=\"content\" role=\"main\">\n  <router-outlet></router-outlet>\n\n  <footer class=\"fixed-bottom\">\n    <div class=\"footer\">© 2021 Copyright: Shu Han</div>\n  </footer>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ClarityModule } from '@clr/angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CircularChartComponent } from './circular-chart/circular-chart.component';\nimport { MapChartComponent } from './map-chart/map-chart.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { DescriptionComponent } from './description/description.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CircularChartComponent,\n    MapChartComponent,\n    BarChartComponent,\n    DescriptionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ClarityModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-circular-chart',\n  templateUrl: './circular-chart.component.html',\n  styleUrls: ['./circular-chart.component.css']\n})\nexport class CircularChartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>circular-chart works!</p>\n","export class DailyData {\n    public date: string = \"\";\n    public state: string = \"\";\n    public death: number = 0;\n    public deathConfirmed: number = 0;\n    public deathIncrease: number = 0;\n    public deathProbable: number = 0;\n    public hospitalized: number = 0;\n    public hospitalizedCumulative: number = 0;\n    public hospitalizedCurrently: number = 0;\n    public hospitalizedIncrease: number = 0;\n    public inIcuCumulative: number = 0;\n    public inIcuCurrently: number = 0;\n    public negative: number = 0;\n    public negativeIncrease: number = 0;\n    public negativeTestsAntibody: number = 0;\n    public negativeTestsPeopleAntibody: number = 0;\n    public negativeTestsViral: number = 0;\n    public onVentilatorCumulative: number = 0;\n    public onVentilatorCurrently: number = 0;\n    public positive: number = 0;\n    public positiveCasesViral: number = 0;\n    public positiveIncrease: number = 0;\n    public positiveScore: number = 0;\n    public positiveTestsAntibody: number = 0;\n    public positiveTestsAntigen: number = 0;\n    public positiveTestsPeopleAntibody: number = 0;\n    public positiveTestsPeopleAntigen: number = 0;\n    public positiveTestsViral: number = 0;\n    public recovered: number = 0;\n    public totalTestEncountersViral: number = 0;\n    public totalTestEncountersViralIncrease: number = 0;\n    public totalTestResults: number = 0;\n    public totalTestResultsIncrease: number = 0;\n    public totalTestsAntibody: number = 0;\n    public totalTestsAntigen: number = 0;\n    public totalTestsPeopleAntibody: number = 0;\n    public totalTestsPeopleAntigen: number = 0;\n    public totalTestsPeopleViral: number = 0;\n    public totalTestsPeopleViralIncrease: number = 0;\n    public totalTestsViral: number = 0;\n    public totalTestsViralIncrease: number = 0;\n}\n\nexport class StateData{\n    public state: string = \"\";\n    public fullStateName: string = \"\";\n    public daily: DailyData[] = [];\n}\n\nexport class MapSingleDayData{\n    public state: string = \"\";\n    public fullStateName: string = \"\";\n    public positive: number = 0;\n    public recovered: number = 0;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport * as d3 from \"d3\";\nimport states from '../../assets/data/state_name.json';\nimport { DailyData, StateData } from '../shared/models';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css']\n})\nexport class BarChartComponent implements OnInit {\n\n  myStates: {} = states;\n  loadAllFilePromises: Promise<any>[] = [];\n  minVal: number = 0;\n  maxVal: number = 0;\n  allStatesData: StateData[] = [];\n  BarChartData: any = null;\n  currentDate: string = \"\";\n  minDate: string = \"2020-03-04\";\n  maxDate: string = \"2021-02-22\";\n  // currentStateData: BarChartSingleDayData[] = [];\n  \n  margin: {} = { top:20, right:20, bottom:30, left:40};\n \n\n \n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void{\n\n    this.loadAllData();\n  }\n\n  loadAllData(){\n    Object.entries(this.myStates).forEach(([key, value]) => {\n      // console.log(\"check\", key, value)\n      let fileName = key + '.json';\n      let filePath = 'assets/data/history/json/' + fileName;\n      let fullStateName = \"\" + value;\n\n      // add each readFile Promise function into a list\n      this.loadAllFilePromises.push(this.readFile(filePath, key, fullStateName));\n    });\n    \n    // Promise all Promises to move to the next step, ensure we have read all files\n    // Promise.all(this.loadAllFilePromises)\n    //   .then(() => {\n    //     this.loadBarChartData();\n    //   });\n\n  }\n\n   // this is a Promise function, Promise will ensure finishing current work before reaching to the next step\n   readFile(filePath: string, stateName: string, fullStateName: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get(filePath, {responseType: 'json'})\n        .subscribe(\n          data => {\n            let currentStateData: StateData = new StateData();\n            // loop through each day's data of a state to combine as a summarized data set\n            Object.entries(data).forEach(([key, value]) => {\n              // console.log(\"check key value\", key, value)\n              let daily: DailyData = Object.assign(new DailyData(), value);\n              // this.minVal = daily.positive < this.minVal ? daily.positive : this.minVal;\n              this.maxVal = daily.positive > this.maxVal ? daily.positive : this.maxVal;\n              currentStateData.daily.push(daily);\n            });\n            currentStateData.state = stateName;\n            currentStateData.fullStateName = fullStateName;\n            this.allStatesData.push(currentStateData);\n            // console.log(\"check json\", currentStateData);\n            \n            resolve(currentStateData);\n          },\n          error => {\n            reject(error);\n            console.log(\"error when read file\", error);\n          }\n        );\n    })\n}\n// read map json file\n// loadBarChartData(){\n//   d3.json(\"assets/data/history/json\")\n//     .then(data => {\n//         // console.log(\"check map data\", data);\n//         this.BarChartData = data;\n//         this.prepareDate();\n//     })\n//     .catch(error => \n//       console.log(\"error when load us.json\", error)\n//     );\n// }\n\n// prepareDate(){\n//   // this.allStatesData.forEach(state => {\n//   //   let tempDate = new Date(state.daily[state.daily.length - 1].date);\n//   //   let current = new Date(this.minDate);\n//   //   if(tempDate < current){\n//   //     this.minDate = state.daily[state.daily.length - 1].date;\n//   //   }\n//   // })\n//   this.currentDate = this.minDate;\n//   // console.log(\"check min date\", this.minDate)\n//   this.prepareData()\n//       .then(() => {\n//         // this.createChart();\n    \n//       })\n//       .catch(error => console.log(\"error when inital draw map\", error));\n// }\n\n// prepareData(): Promise<any> {\n//   return new Promise((resolve, reject) => {\n//     this.currentStateData = [];\n//     this.allStatesData.forEach(state => {\n//       let currentDeath = state.daily.find(x => x.date == this.currentDate)?.death;\n//       // console.log(\"check each state\", state.fullStateName, currentPositive)\n//       currentDeath = currentDeath == null ? 0 : currentDeath;\n//       let currentRecovered = state.daily.find(x => x.date == this.currentDate)?.recovered;\n//       currentRecovered = currentRecovered == null ? 0 : currentRecovered;\n//       let currentHospitalized = state.daily.find(x => x.date == this.currentDate)?.hospitalized;\n//       currentHospitalized = currentHospitalized == null ? 0 : currentHospitalized;\n//       let currentStateData = new BarChartSingleDayData();\n//       currentStateData.state = state.state;\n//       currentStateData.death = currentDeath;\n//       currentStateData.recovered = currentRecovered;\n//       currentStateData.hospitalized = currentHospitalized;\n//       currentStateData.fullStateName = state.fullStateName;\n//       this.currentStateData.push(currentStateData);\n//     })\n\n//     resolve(this.currentStateData);\n//   })\n// }\n\n\n\n\n  // createChart() {\n  //   const svg = d3.create('svg')\n  //                 .attr('')\n\n  //   const element = this.chartContainer.nativeElement;\n  //   const data = this.data;\n\n  //   const svg = d3.select(element)\n  //                 .append('svg')\n  //                 .attr('width', element.offsetWidth)\n  //                 .attr('height', element.offsetHeight);\n\n  //   const contentWidth = element.offsetWidth - this.margin.left - this.margin.right;\n  //   const contentHeight = element.offsetHeight - this.margin.top - this.margin.bottom;\n\n  //   const x = d3\n  //     .scaleBand()\n  //     .rangeRound([0, contentWidth])\n  //     .padding(0.1)\n  //     .domain(data.map(d => d.letter));\n\n  //   const y = d3\n  //     .scaleLinear()\n  //     .rangeRound([contentHeight, 0])\n  //     .domain([0, d3.max(data, d => d.frequency)]);\n\n  //   const g = svg.append('g')\n  //     .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n  //   g.append('g')\n  //     .attr('class', 'axis axis--x')\n  //     .attr('transform', 'translate(0,' + contentHeight + ')')\n  //     .call(d3.axisBottom(x));\n\n  //   g.append('g')\n  //     .attr('class', 'axis axis--y')\n  //     .call(d3.axisLeft(y).ticks(10, '%'))\n  //     .append('text')\n  //     .attr('transform', 'rotate(-90)')\n  //     .attr('y', 6)\n  //     .attr('dy', '0.71em')\n  //     .attr('text-anchor', 'end')\n  //     .text('Frequency');\n\n  //   g.selectAll('.bar')\n  //     .data(data)\n  //     .enter()\n  //     .append('rect')\n  //     .attr('class', 'bar')\n  //     .attr('x', d => x(d.letter))\n  //     .attr('y', d => y(d.frequency))\n  //     .attr('width', x.bandwidth())\n  //     .attr('height', d => contentHeight - y(d.frequency));\n  // }\n\n\n  \n\n\n \n\n  \n}","\n<div class=\"main-container\">\n    <div class=\"sub-page-title\">\n        <h4>US Covid-19 BarChart</h4>\n        <p>Current Date: {{currentDate}}</p>\n    </div>\n    <div id=\"graph\"></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { BarChartComponent } from './bar-chart/bar-chart.component';\nimport { MapChartComponent } from './map-chart/map-chart.component';\nimport { CircularChartComponent } from './circular-chart/circular-chart.component';\nimport { DescriptionComponent } from './description/description.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: DescriptionComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full'},\n  { path: 'map', component: MapChartComponent},\n  { path: 'bar', component: BarChartComponent},\n  { path: 'circular', component: CircularChartComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport states from '../../assets/data/state_name.json';\nimport { HttpClient } from '@angular/common/http';\nimport { DailyData, StateData } from '../shared/models';\n\n@Component({\n  selector: 'app-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.css']\n})\nexport class DescriptionComponent implements OnInit {\n\n  myStates: {} = states;\n  fileReader = new FileReader();\n  allStates: StateData[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  processData(){\n\n    Object.entries(this.myStates).forEach(([key, value]) => {\n      console.log(\"check\", key, value)\n      let fileName = key + '.csv';\n      let filePath = 'assets/data/history/csv/' + fileName;\n      this.readFile(filePath);\n    });\n  }\n\n  readFile(filePath: string){\n    this.http.get(filePath, {responseType: 'text'})\n    .subscribe(\n        data => {\n            // this.csvToJson(data);\n            console.log(\"check csv\", data);\n        },\n        error => {\n            console.log(error);\n        }\n    );\n  }\n\n  // csvToJson(data: any) {\n  //   let record = data.split(/\\r\\n|\\n/);\n  //   let headers = record[0].split(',');\n  //   let lines = [];\n  //   let stateDataList: StateData[] = [];\n\n  //   for (let i = 1; i < record.length; i++) {\n  //       let data = record[i].split(',');\n  //       let row = new DailyData();\n  //       row.death = +data[2];\n  //       row.deathConfirmed = +data[3];\n  //       row.deathIncrease = +data[4];\n  //       row.deathProbable = +data[5];\n  //       row.hospitalized = +data[6];\n  //       row.hospitalizedCumulative = +data[7];\n  //       row.hospitalizedCurrently = +data[8];\n  //       row.hospitalizedIncrease = +data[9];\n  //       row.inIcuCumulative = +data[10];\n  //       row.inIcuCurrently = +data[11];\n  //       row.negative = +data[12];\n  //       row.negativeIncrease = +data[13];\n  //       row.negativeTestsAntibody = +data[14];\n  //       row.negativeTestsPeopleAntibody = +data[15];\n  //       row.negativeTestsViral = +data[16];\n  //       row.onVentilatorCumulative = +data[17];\n  //       row.onVentilatorCurrently = +data[18];\n  //       row.positive = +data[19];\n  //       row.positiveCasesViral = +data[20];\n  //       row.positiveIncrease = +data[21];\n  //       row.positiveScore = +data[22];\n  //       row.positiveTestsAntibody = +data[23];\n  //       row.positiveTestsAntigen = +data[24];\n  //       row.positiveTestsPeopleAntibody = +data[25];\n  //       row.positiveTestsPeopleAntigen = +data[26];\n  //       row.positiveTestsViral = +data[27];\n  //       row.recovered = +data[28];\n  //       row.totalTestEncountersViral = +data[29];\n  //       row.totalTestEncountersViralIncrease = +data[30];\n  //       row.totalTestResults = +data[31];\n  //       row.totalTestResultsIncrease = +data[32];\n  //       row.totalTestsAntibody = +data[33];\n  //       row.totalTestsAntigen = +data[34];\n  //       row.totalTestsPeopleAntibody = +data[35];\n  //       row.totalTestsPeopleAntigen = +data[36];\n  //       row.totalTestsPeopleViral = +data[37];\n  //       row.totalTestsPeopleViralIncrease = +data[38];\n  //       row.totalTestsViral = +data[39];\n  //       row.totalTestsViralIncrease = +data[40];\n\n  //       let stateData = new StateData();\n  //       stateData.date = new Date(data[0]);\n  //       stateData.state = data[1];\n  //       stateData.daily = row;\n\n  //       stateDataList.push(stateData);\n  //   }\n\n  //   console.log(\"check state data\", stateDataList)\n  //   let fileName = 'AZ.json';\n  //   let filePath = 'assets/data/history/json/' + fileName;\n  //   this.http.post(filePath, stateDataList).subscribe(data => {\n  //     console.log(\"successfully created json file\");\n  //   }, error => {\n  //     console.log(\"error when creating json file\", error)\n  //   })\n\n  // }\n\n}\n","<h4 class=\"sub-page-title\">Description</h4>\n<div class=\"main-content\">\n    <ul>\n        <li>This is a course project at University of Victoria, BC, Canada.</li>\n        <li>The specific course is CSC 511 - Information Visualization, Instructor: Dr. Charles Perin</li>\n        <li>The author of this website is actively attending this course during Jan 2021 to April 2021, and this is the final course project.</li>\n        <li>The purpose of this project is trying to get a better understanding the Visualization design metrics. And it will apply the public data from <a href=\"https://covidtracking.com/\">https://covidtracking.com/</a> to build several charts to demonstrate the course spirit.</li>\n        <li>This project starts on Feb 23, 2021, and will be finished before April 12, 2021.</li>\n        <li>Author LinkedIn: <a href=\"https://www.linkedin.com/in/shu-han/\">https://www.linkedin.com/in/shu-han/</a></li>\n    </ul>\n\n    <!-- <button (click)=\"processData()\">Process data</button> -->\n</div>\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}